// Code generated by github.com/go-darwin/tools/cmd/mkgodef; DO NOT EDIT.
// Input to cgo -godefs.

//go:build ignore
// +build ignore

package capstone

/*
#include <capstone/capstone.h>
*/
import "C"

type CsAcType C.enum_cs_ac_type

const (
	CS_AC_INVALID CsAcType = C.CS_AC_INVALID
	CS_AC_READ    CsAcType = C.CS_AC_READ
	CS_AC_WRITE   CsAcType = C.CS_AC_WRITE
)

type CsArch C.enum_cs_arch

const (
	CS_ARCH_ARM        CsArch = C.CS_ARCH_ARM
	CS_ARCH_ARM64      CsArch = C.CS_ARCH_ARM64
	CS_ARCH_MIPS       CsArch = C.CS_ARCH_MIPS
	CS_ARCH_X86        CsArch = C.CS_ARCH_X86
	CS_ARCH_PPC        CsArch = C.CS_ARCH_PPC
	CS_ARCH_SPARC      CsArch = C.CS_ARCH_SPARC
	CS_ARCH_SYSZ       CsArch = C.CS_ARCH_SYSZ
	CS_ARCH_XCORE      CsArch = C.CS_ARCH_XCORE
	CS_ARCH_M68K       CsArch = C.CS_ARCH_M68K
	CS_ARCH_TMS320C64X CsArch = C.CS_ARCH_TMS320C64X
	CS_ARCH_M680X      CsArch = C.CS_ARCH_M680X
	CS_ARCH_EVM        CsArch = C.CS_ARCH_EVM
	CS_ARCH_MOS65XX    CsArch = C.CS_ARCH_MOS65XX
	CS_ARCH_WASM       CsArch = C.CS_ARCH_WASM
	CS_ARCH_BPF        CsArch = C.CS_ARCH_BPF
	CS_ARCH_RISCV      CsArch = C.CS_ARCH_RISCV
	CS_ARCH_MAX        CsArch = C.CS_ARCH_MAX
	CS_ARCH_ALL        CsArch = C.CS_ARCH_ALL
)

type CsErr C.enum_cs_err

const (
	CS_ERR_OK        CsErr = C.CS_ERR_OK
	CS_ERR_MEM       CsErr = C.CS_ERR_MEM
	CS_ERR_ARCH      CsErr = C.CS_ERR_ARCH
	CS_ERR_HANDLE    CsErr = C.CS_ERR_HANDLE
	CS_ERR_CSH       CsErr = C.CS_ERR_CSH
	CS_ERR_MODE      CsErr = C.CS_ERR_MODE
	CS_ERR_OPTION    CsErr = C.CS_ERR_OPTION
	CS_ERR_DETAIL    CsErr = C.CS_ERR_DETAIL
	CS_ERR_MEMSETUP  CsErr = C.CS_ERR_MEMSETUP
	CS_ERR_VERSION   CsErr = C.CS_ERR_VERSION
	CS_ERR_DIET      CsErr = C.CS_ERR_DIET
	CS_ERR_SKIPDATA  CsErr = C.CS_ERR_SKIPDATA
	CS_ERR_X86_ATT   CsErr = C.CS_ERR_X86_ATT
	CS_ERR_X86_INTEL CsErr = C.CS_ERR_X86_INTEL
	CS_ERR_X86_MASM  CsErr = C.CS_ERR_X86_MASM
)

type CsGroupType C.enum_cs_group_type

const (
	CS_GRP_INVALID         CsGroupType = C.CS_GRP_INVALID
	CS_GRP_JUMP            CsGroupType = C.CS_GRP_JUMP
	CS_GRP_CALL            CsGroupType = C.CS_GRP_CALL
	CS_GRP_RET             CsGroupType = C.CS_GRP_RET
	CS_GRP_INT             CsGroupType = C.CS_GRP_INT
	CS_GRP_IRET            CsGroupType = C.CS_GRP_IRET
	CS_GRP_PRIVILEGE       CsGroupType = C.CS_GRP_PRIVILEGE
	CS_GRP_BRANCH_RELATIVE CsGroupType = C.CS_GRP_BRANCH_RELATIVE
)

type CsMode C.enum_cs_mode

const (
	CS_MODE_LITTLE_ENDIAN         CsMode = C.CS_MODE_LITTLE_ENDIAN
	CS_MODE_ARM                   CsMode = C.CS_MODE_ARM
	CS_MODE_16                    CsMode = C.CS_MODE_16
	CS_MODE_32                    CsMode = C.CS_MODE_32
	CS_MODE_64                    CsMode = C.CS_MODE_64
	CS_MODE_THUMB                 CsMode = C.CS_MODE_THUMB
	CS_MODE_MCLASS                CsMode = C.CS_MODE_MCLASS
	CS_MODE_V8                    CsMode = C.CS_MODE_V8
	CS_MODE_MICRO                 CsMode = C.CS_MODE_MICRO
	CS_MODE_MIPS3                 CsMode = C.CS_MODE_MIPS3
	CS_MODE_MIPS32R6              CsMode = C.CS_MODE_MIPS32R6
	CS_MODE_MIPS2                 CsMode = C.CS_MODE_MIPS2
	CS_MODE_V9                    CsMode = C.CS_MODE_V9
	CS_MODE_QPX                   CsMode = C.CS_MODE_QPX
	CS_MODE_SPE                   CsMode = C.CS_MODE_SPE
	CS_MODE_BOOKE                 CsMode = C.CS_MODE_BOOKE
	CS_MODE_M68K_000              CsMode = C.CS_MODE_M68K_000
	CS_MODE_M68K_010              CsMode = C.CS_MODE_M68K_010
	CS_MODE_M68K_020              CsMode = C.CS_MODE_M68K_020
	CS_MODE_M68K_030              CsMode = C.CS_MODE_M68K_030
	CS_MODE_M68K_040              CsMode = C.CS_MODE_M68K_040
	CS_MODE_M68K_060              CsMode = C.CS_MODE_M68K_060
	CS_MODE_BIG_ENDIAN            CsMode = C.CS_MODE_BIG_ENDIAN
	CS_MODE_MIPS32                CsMode = C.CS_MODE_MIPS32
	CS_MODE_MIPS64                CsMode = C.CS_MODE_MIPS64
	CS_MODE_M680X_6301            CsMode = C.CS_MODE_M680X_6301
	CS_MODE_M680X_6309            CsMode = C.CS_MODE_M680X_6309
	CS_MODE_M680X_6800            CsMode = C.CS_MODE_M680X_6800
	CS_MODE_M680X_6801            CsMode = C.CS_MODE_M680X_6801
	CS_MODE_M680X_6805            CsMode = C.CS_MODE_M680X_6805
	CS_MODE_M680X_6808            CsMode = C.CS_MODE_M680X_6808
	CS_MODE_M680X_6809            CsMode = C.CS_MODE_M680X_6809
	CS_MODE_M680X_6811            CsMode = C.CS_MODE_M680X_6811
	CS_MODE_M680X_CPU12           CsMode = C.CS_MODE_M680X_CPU12
	CS_MODE_M680X_HCS08           CsMode = C.CS_MODE_M680X_HCS08
	CS_MODE_BPF_CLASSIC           CsMode = C.CS_MODE_BPF_CLASSIC
	CS_MODE_BPF_EXTENDED          CsMode = C.CS_MODE_BPF_EXTENDED
	CS_MODE_RISCV32               CsMode = C.CS_MODE_RISCV32
	CS_MODE_RISCV64               CsMode = C.CS_MODE_RISCV64
	CS_MODE_RISCVC                CsMode = C.CS_MODE_RISCVC
	CS_MODE_MOS65XX_6502          CsMode = C.CS_MODE_MOS65XX_6502
	CS_MODE_MOS65XX_65C02         CsMode = C.CS_MODE_MOS65XX_65C02
	CS_MODE_MOS65XX_W65C02        CsMode = C.CS_MODE_MOS65XX_W65C02
	CS_MODE_MOS65XX_65816         CsMode = C.CS_MODE_MOS65XX_65816
	CS_MODE_MOS65XX_65816_LONG_M  CsMode = C.CS_MODE_MOS65XX_65816_LONG_M
	CS_MODE_MOS65XX_65816_LONG_X  CsMode = C.CS_MODE_MOS65XX_65816_LONG_X
	CS_MODE_MOS65XX_65816_LONG_MX CsMode = C.CS_MODE_MOS65XX_65816_LONG_MX
)

type CsOpType C.enum_cs_op_type

const (
	CS_OP_INVALID CsOpType = C.CS_OP_INVALID
	CS_OP_REG     CsOpType = C.CS_OP_REG
	CS_OP_IMM     CsOpType = C.CS_OP_IMM
	CS_OP_MEM     CsOpType = C.CS_OP_MEM
	CS_OP_FP      CsOpType = C.CS_OP_FP
)

type CsOptType C.enum_cs_opt_type

const (
	CS_OPT_INVALID        CsOptType = C.CS_OPT_INVALID
	CS_OPT_SYNTAX         CsOptType = C.CS_OPT_SYNTAX
	CS_OPT_DETAIL         CsOptType = C.CS_OPT_DETAIL
	CS_OPT_MODE           CsOptType = C.CS_OPT_MODE
	CS_OPT_MEM            CsOptType = C.CS_OPT_MEM
	CS_OPT_SKIPDATA       CsOptType = C.CS_OPT_SKIPDATA
	CS_OPT_SKIPDATA_SETUP CsOptType = C.CS_OPT_SKIPDATA_SETUP
	CS_OPT_MNEMONIC       CsOptType = C.CS_OPT_MNEMONIC
	CS_OPT_UNSIGNED       CsOptType = C.CS_OPT_UNSIGNED
)

type CsOptValue C.enum_cs_opt_value

const (
	CS_OPT_OFF              CsOptValue = C.CS_OPT_OFF
	CS_OPT_ON               CsOptValue = C.CS_OPT_ON
	CS_OPT_SYNTAX_DEFAULT   CsOptValue = C.CS_OPT_SYNTAX_DEFAULT
	CS_OPT_SYNTAX_INTEL     CsOptValue = C.CS_OPT_SYNTAX_INTEL
	CS_OPT_SYNTAX_ATT       CsOptValue = C.CS_OPT_SYNTAX_ATT
	CS_OPT_SYNTAX_NOREGNAME CsOptValue = C.CS_OPT_SYNTAX_NOREGNAME
	CS_OPT_SYNTAX_MASM      CsOptValue = C.CS_OPT_SYNTAX_MASM
	CS_OPT_SYNTAX_MOTOROLA  CsOptValue = C.CS_OPT_SYNTAX_MOTOROLA
)

// type CsDetail C.struct_cs_detail

// type CsInsn C.struct_cs_insn

// type CsOptMem C.struct_cs_opt_mem

// type CsOptMnem C.struct_cs_opt_mnem

type CsOptSkipdata C.struct_cs_opt_skipdata

type CsCallocT C.cs_calloc_t

type CsFreeT C.cs_free_t

type CsMallocT C.cs_malloc_t

type CsReallocT C.cs_realloc_t

type CsRegs C.cs_regs

type CsSkipdataCbT C.cs_skipdata_cb_t

type CsVsnprintfT C.cs_vsnprintf_t

type Csh C.csh

const CS_API_MAJOR = C.CS_API_MAJOR

const CS_API_MINOR = C.CS_API_MINOR

const CS_NEXT_VERSION = C.CS_NEXT_VERSION

const CS_VERSION_MAJOR = C.CS_VERSION_MAJOR

const CS_VERSION_MINOR = C.CS_VERSION_MINOR

const CS_VERSION_EXTRA = C.CS_VERSION_EXTRA

const CS_MNEMONIC_SIZE = C.CS_MNEMONIC_SIZE
